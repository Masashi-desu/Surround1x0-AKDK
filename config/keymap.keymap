#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include "../dts/layout_shift.dtsi"

// ZMK用のキーマップ設定ファイル
// レイヤー構成:
// - Default: 通常のタイピング用
// - Move: カーソル移動・スクロール・マウス入力用
// - Char: 記号や括弧などの入力用
// - num: 数字入力・テンキー配列
// - function: ファンクションキー (F1〜F12)
// - bt: Bluetoothデバイス選択と切替操作

/ {
    combos {
        compatible = "zmk,combos";
        combo-term-ms = <100>;

        // コンボ定義:
        // 特定のキーを同時押ししたときの動作を定義
        // 数字レイヤーをトグル
        // ファンクションレイヤーをトグル
        // Enterキー入力
        // Bluetooth設定レイヤーに一時移動

        moSettings {
            bindings = <&mo 7>;
            key-positions = <0 12 24>;
        };

        // すべてのレイヤーを無効化してデフォルトレイヤーに戻す

        moRecess {
            bindings = <&mo 6>;
            key-positions = <1 13 25>;
        };

        moFunction {
            bindings = <&mo 4>;
            key-positions = <42 44>;
        };
    };

    behaviors {
        multiMkp: multiMkp {
            compatible = "zmk,behavior-hold-tap";
            label = "MULTIMKP";
            bindings = <&mkp>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
        };

        moto: moto {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold mo Tap to";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // デフォルトレイヤー: 通常のタイピングに使用

        Default {
            bindings = <
&mtls ESC Q     &kp L        &kp U       &kp COMMA   &kp PERIOD     &mtls CAPSLOCK DELETE                 &kp SPACE      &kp F  &kp W        &kp R       &kp Y       &kp P
&kp E         &kp I        &kp A       &kp O       &kp MINUS      &mtls HOME LEFT_ARROW                 &mtls END RIGHT  &kp K  &kp T        &kp N       &kp S       &kp H
&mtls LSHIFT Z  &mtls LCTRL X  &mtls LALT C  &mtls LCMD V  &kp SEMICOLON  &kp TAB                             &kp ENTER      &kp G  &mtls RCTRL D  &mtls RALT M  &mtls RCMD J  &mtls LSHIFT B
                                       &kpls RCTRL   &kpls RALT       &kpls LCMD             &kp LANG1      &kp LANG2
                                                   &moto 2 0      &moto 3 1            &kp BACKSPACE  &kp SPACE
            >;
        };

        Move {
            bindings = <
&kp ESCAPE        &kp PAGE_UP  &kp UP_ARROW    &kp PAGE_DOWN  &kp HOME   &mtls CAPSLOCK DELETE                  &kp SPACE    &none  &msc SCRL_RIGHT  &msc SCRL_LEFT  &none     &none
&mo 5             &kp LEFT     &kp DOWN_ARROW  &kp RIGHT      &kp END    &mkp MB4                             &mkp MB5     &none  &mkp MB1        &mkp MB2         &mkp MB3  &mo 5
&mtls LEFT_SHIFT Z  &mtls LCTRL X  &mtls LALT C      &mtls LCMD V     &none      &kp TAB                              &kp ENTER    &none  &kpls RCTRL       &kpls RALT         &kpls RCMD  &kp RSHIFT
                                               &kpls LCTRL      &kpls LALT   &kpls LCMD             &msc SCRL_DOWN    &kp RS(TAB)
                                                              &moto 2 0  &moto 3 1            &msc SCRL_UP  &kp TAB
            >;
        };

        Char {
            bindings = <
&kp ESCAPE  &kp PAGE_UP  &kp UP_ARROW    &kp PAGE_DOWN  &kp HOME   &mtls CAPSLOCK DELETE                  &kp SPACE       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS      &kp EQUAL  &kp ASTERISK
&mo 5       &kp LEFT     &kp DOWN_ARROW  &kp RIGHT      &kp END    &mkp MB4                             &mkp MB5        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp SQT    &kp GRAVE
&kp LSHIFT  &kpls LCTRL    &kpls LALT        &kpls LCMD       &none      &kp TAB                              &kp ENTER       &kp COMMA             &kp PERIOD             &kp BACKSLASH  &kp SLASH  &mtls RSHIFT EXCLAMATION
                                         &kpls LCTRL      &kpls LALT   &kpls LCMD             &kp LANGUAGE_1  &kp LANGUAGE_2
                                                        &moto 2 0  &moto 3 1            &kp BACKSPACE   &kp SPACE
            >;
        };

        Num {
            bindings = <
&kp ESC     &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &kp HOME   &mtls CAPSLOCK DELETE                  &kp SPACE       &kp SLASH     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&mo 5       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END    &mkp MB4                             &mkp MB5        &kp ASTERISK  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS
&kp LSHIFT  &kpls LCTRL       &kpls LALT        &kpls LCMD         &none      &kp TAB                              &kp ENTER       &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD
                                            &kpls LCTRL        &kpls LALT   &kpls LCMD             &kp LANGUAGE_1  &kp LANGUAGE_2
                                                             &moto 2 0  &moto 3 1            &kp BACKSPACE   &kp SPACE
            >;
        };

        Function {
            bindings = <
&kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&kp F1                &kp F2                &kp F3  &kp F4  &kp F5  &kp F6          &kp F7  &kp F8  &kp F9  &kp F10     &kp F11            &kp F12
&trans                &trans                &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans      &trans             &trans
                                                    &trans  &trans  &trans  &trans  &trans
                                                            &trans  &trans  &trans  &trans
            >;
        };

        Scroll {
            bindings = <
&kp ESCAPE        &kp PAGE_UP  &kp UP_ARROW    &kp PAGE_DOWN  &kp HOME   &mtls CAPSLOCK DELETE                  &kp SPACE    &none  &msc SCRL_RIGHT  &msc SCRL_LEFT  &none     &none
&none             &kp LEFT     &kp DOWN_ARROW  &kp RIGHT      &kp END    &mkp MB4                             &mkp MB5     &none  &mkp MB1        &mkp MB2         &mkp MB3  &none
&mtls LEFT_SHIFT Z  &mtls LCTRL X  &mtls LALT C      &mtls LCMD V     &none      &kp TAB                              &kp ENTER    &none  &kpls RCTRL       &kpls RALT         &kpls RCMD  &kp RSHIFT
                                               &kpls LCTRL      &kpls LALT   &kpls LCMD             &msc SCRL_DOWN    &kp RS(TAB)
                                                              &moto 2 0  &moto 3 1            &msc SCRL_UP  &kp TAB
            >;
        };

        Recess {
            bindings = <
&none  &none  &none  &none  &none  &kp C_POWER                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &kp C_AL_SCREENSAVER         &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                        &none  &none  &none  &none  &none  &none
                     &none  &none  &none                 &none  &none
                            &none  &none                 &none  &none
            >;
        };

        Setting {
            bindings = <
&none  &none  &none  &none  &none  &bt BT_CLR             &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
&bt BT_SEL 4
&none  &none  &none  &none  &none  &studio_unlock         &none         &none         &none         &none         &none         &none
&none  &none  &none  &none  &none  &none                  &tog_ls         &none         &none         &none         &bt BT_PRV    &bt BT_NXT
                     &none  &none  &none           &none  &none
                            &none  &none           &none  &none
            >;
        };
    };
};
