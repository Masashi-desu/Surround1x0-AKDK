#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Default {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T   &none                   &none           &kp Y  &kp U  &kp I      &kp O      &kp P
&kp A  &kp S  &kp D  &kp F  &kp G   &none                   &none           &kp H  &kp J  &kp K      &kp L      &kp ENTER
&kp Z  &kp X  &kp C  &kp V  &kp B   &none                   &none           &kp N  &kp M  &mkp LCLK  &mkp RCLK  &kp RSHIFT
                     &none  &none   &none   &kp BACKSPACE   &kp SPACE
                            &tog 2  &tog 1  &kp LANGUAGE_2  &kp LANGUAGE_1
            >;
        };

        Move {
            bindings = <
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none
                     &none  &none  &none  &none  &none
                            &none  &none  &none  &none
            >;
        };

        Char {
            bindings = <
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none         &none  &none  &none  &none  &none  &none
                     &none  &none  &none  &none  &none
                            &none  &none  &none  &none
            >;
        };

        fn_num {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6         &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &none          &kp N7  &kp N6  &kp N7  &kp N8   &kp N9   &kp N0
&none   &none   &none   &none   &none   &none          &none   &none   &none   &none    &none    &none
                        &none   &none   &none   &none  &none
                                &none   &none   &none  &none
            >;
        };
    };
};
